version: '3.8'
volumes:
  acme:
  static:
  media:
  pgdata:
  portainer_data:
  migrations_tbot:
networks:
  web:
    external: true
  internal:
    external: false
services:
  traefik:
    image: traefik:v2.4.13
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/traefik.yml:/traefik.yml
      - acme:/acme
    environment:
        GODADDY_API_KEY: eo21RqCehejF_QeNJVWghZ3oZVdRW3HxDUg
        GODADDY_API_SECRET: JDf91MbssrufM7vgiGkFSn
        DO_AUTH_TOKEN: 82c9b111821fe7baf1bf4c054db6b2b18b4c88beb30f7875a50f37753f50a451
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH_USERS}
      - traefik.http.routers.dashboard.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.dashboard.tls.certresolver=sslcert
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`) || PathPrefix(`/dashboard`)
    networks:
      - web
      - internal
    depends_on:
      - nginx

  nginx:
       image: nginx:alpine
       restart: always
       volumes:
           - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
           - static:/opt/app/static
           - media:/opt/app/media
       labels:
           - traefik.enable=true
           - traefik.http.routers.nginx.entrypoints=https
           - traefik.http.routers.nginx.tls.certresolver=sslcert
           - traefik.http.routers.nginx.rule=Host(`${DOMAIN}`)
       networks:
            - internal
       depends_on:
            - python
            - portainer

  python: &python
    build:
        context: .
        dockerfile: docker/python/Dockerfile
    environment:
      - POSTGRES_USER=user
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis:6379/0
    volumes:
        - static:/opt/app/static
        - media:/opt/app/media
        - migrations_tbot:/opt/app/tbot/migrations
    depends_on:
        - postgres
    labels:
      - traefik.enable=false
    networks:
      - internal
      - web
    ports:
        - 8093:8093
    command: gunicorn -w 4 example.wsgi -b 0.0.0.0:8093
  postgres:
    image: postgres:12.4
    environment:
        POSTGRES_USER: user
        POSTGRES_DB: db
        POSTGRES_PASSWORD: password
    volumes:
        - pgdata:/var/lib/postgresql/data
    ports:
        - 5432:5432
    labels:
      - traefik.enable=false
    networks:
      - internal
  redis:
    image: redis:latest
    ports:
        - 6379:6379
    labels:
      - traefik.enable=false
    networks:
      - internal
  celery_worker:
    <<: *python
    command: celery -A internal_realtor worker -l INFO -E -B
    ports: []
    restart: always
    depends_on:
        - redis
        - postgres
    labels:
      - traefik.enable=false
    networks:
      - internal
  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/datas
    labels:
      - traefik.enable=false
    networks:
      - internal
    ports:
        - 9000:9000
